//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float4 DepthOfFieldParams;         // Offset:    0 Size:    16 [unused]
//   uint bSceneLightingChannelsValid;  // Offset:   16 Size:     4 [unused]
//   float4 GammaAndAlphaValues;        // Offset:   32 Size:    16
//   float4 ShaderParams;               // Offset:   48 Size:    16
//   float4 ShaderParams2;              // Offset:   64 Size:    16 [unused]
//   float4 DrawFlags;                  // Offset:   80 Size:    16
//   float4 BatchColor;                 // Offset:   96 Size:    16 [unused]
//
// }
//
// cbuffer Material
// {
//
//   float4 Material_PreshaderBuffer[15];// Offset:    0 Size:   240
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// $Globals                          cbuffer      NA          NA            cb0      1 
// Material                          cbuffer      NA          NA            cb1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// COLOR                    0   xyzw        1     NONE   float   xyzw
// COLOR                    1   xyzw        2     NONE   float       
// ORIGINAL_POSITION        0   xyzw        3     NONE   float       
// TEXCOORD                 0   xy          4     NONE   float       
// TEXCOORD                 1   xyzw        5     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[6], immediateIndexed
dcl_constantbuffer CB1[15], immediateIndexed
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v5.xyzw
dcl_output o0.xyzw
dcl_temps 8
mov r0.yz, l(0,1.000000,1.000000,0)
mov r0.xw, v5.zzzw
lt r1.x, l(0.000000), v5.z
movc r0.xy, r1.xxxx, r0.xyxx, r0.zwzz
mul r0.xy, r0.xyxx, v5.xyxx
frc r0.xy, r0.xyxx
movc r2.xz, r1.xxxx, cb0[3].xxyx, l(0,0,1.000000,0)
movc r2.yw, r1.xxxx, l(0,0,0,1.000000), cb0[3].zzzw
add r0.zw, -r2.xxxy, r2.zzzw
mad r0.xy, r0.xyxx, r0.zwzz, r2.xyxx
eq r0.zw, v5.zzzw, l(0.000000, 0.000000, 0.000000, 0.000000)
and r0.z, r0.w, r0.z
movc r0.xy, r0.zzzz, v5.xyxx, r0.xyxx
mad r0.xy, r0.xyxx, cb1[8].xyxx, -cb1[12].xyxx
add r1.xyzw, cb1[12].zwzw, cb1[12].xyxy
add r1.xyzw, -r1.xyzw, cb1[8].xyxy
add r2.xyzw, r1.xwzy, l(-1.000000, -2.000000, -2.000000, -1.000000)
min r0.z, r1.w, r1.z
mad r0.z, r0.z, l(0.500000), l(-2.000000)
min r1.x, r0.z, cb1[11].x
mov r1.y, l(0)
add r1.z, r1.x, l(1.000000)
add r3.xyzw, -r1.yzzy, r2.xwxw
add r3.xyzw, -r0.xyxy, r3.xyzw
add_sat r3.xyzw, r3.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000)
add r0.zw, r1.xxxx, l(0.000000, 0.000000, 1.000000, 2.000000)
add r4.xyzw, -r0.wwww, r0.yxxy
add_sat r4.xy, r4.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
dp2 r0.w, r4.zwzz, r4.zwzz
sqrt r0.w, r0.w
add_sat r5.xyzw, r0.xyxy, l(-0.500000, -0.500000, -1.500000, -1.500000)
mul r3.x, r3.x, r5.x
mul r3.x, r4.x, r3.x
mul r3.x, r3.y, r3.x
mul r3.y, r3.z, r4.y
mul r3.y, r5.y, r3.y
mul r3.y, r3.w, r3.y
max r3.x, r3.y, r3.x
add r3.y, -r0.w, r0.z
add r0.w, -r0.w, r1.x
add_sat r3.y, r3.y, l(0.500000)
max r3.x, r3.y, r3.x
add r6.xyzw, -r1.zzyx, r2.xwzy
add r7.xyzw, -r1.xyxx, r2.zyzy
add r3.yz, r0.xxyx, -r6.xxyx
add r4.zw, -r0.xxxy, r6.zzzw
add_sat r4.zw, r4.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
dp2 r1.y, r3.yzyy, r3.yzyy
sqrt r1.y, r1.y
add r1.y, r0.z, -r1.y
add_sat r1.y, r1.y, l(0.500000)
max r1.y, r1.y, r3.x
mov r3.yz, r2.wwxw
mov r1.w, -r1.z
mov r3.xw, l(2.000000,0,0,2.000000)
add r3.xy, r1.xwxx, r3.xyxx
mad r1.zw, r1.zzzx, l(0.000000, 0.000000, -1.000000, 1.000000), r3.zzzw
add r1.zw, r0.xxxy, -r1.zzzw
dp2 r1.z, r1.zwzz, r1.zwzz
sqrt r1.z, r1.z
add r1.z, r0.z, -r1.z
add_sat r1.z, r1.z, l(0.500000)
add r3.xy, r0.xyxx, -r3.xyxx
dp2 r1.w, r3.xyxx, r3.xyxx
sqrt r1.w, r1.w
add r0.z, r0.z, -r1.w
add_sat r0.zw, r0.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
max r0.z, r0.z, r1.y
max r0.z, r1.z, r0.z
mul r1.y, r0.z, cb1[10].w
mad r0.z, -r0.z, cb1[10].w, cb1[9].w
mul r1.z, r4.z, r5.z
mul r1.z, r4.x, r1.z
mul r1.z, r4.w, r1.z
add r3.xy, -r0.xyxx, r7.xyxx
add r3.zw, r0.xxxy, -r7.zzzw
dp2 r1.w, r3.zwzz, r3.zwzz
sqrt r1.w, r1.w
add r1.w, -r1.w, r1.x
add_sat r1.w, r1.w, l(0.500000)
add_sat r3.xy, r3.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
mul r3.x, r3.x, r4.y
mul r3.x, r5.w, r3.x
mul r3.x, r3.y, r3.x
max r1.z, r1.z, r3.x
max r0.w, r0.w, r1.z
max r0.w, r1.w, r0.w
mov r2.xw, l(2.000000,0,0,2.000000)
mad r2.xyzw, r1.xxxx, l(1.000000, -1.000000, -1.000000, 1.000000), r2.xyzw
add r2.xyzw, r0.xyxy, -r2.xyzw
dp2 r0.x, r2.xyxx, r2.xyxx
dp2 r0.y, r2.zwzz, r2.zwzz
sqrt r0.xy, r0.xyxx
add r0.xy, -r0.xyxx, r1.xxxx
add_sat r0.xy, r0.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
max r0.x, r0.x, r0.w
max r0.x, r0.y, r0.x
mad r0.y, r0.x, r0.z, r1.y
mul_sat r1.w, r0.y, cb1[14].x
add r0.yzw, cb1[9].xxyz, -cb1[10].xxyz
mad r0.xyz, r0.xxxx, r0.yzwy, cb1[10].xyzx
add r2.xyz, -r0.xyzx, cb1[13].yzwy
mad r0.xyz, cb1[13].xxxx, r2.xyzx, r0.xyzx
max r1.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r0.xyzw, r1.xyzw, v1.xyzw
mad r1.xyz, r1.xyzx, v1.xyzx, l(-0.250000, -0.250000, -0.250000, 0.000000)
mad_sat r1.xyz, r1.xyzx, cb0[2].wwww, l(0.250000, 0.250000, 0.250000, 0.000000)
ne r2.xy, cb0[2].wyww, l(1.000000, 1.000000, 0.000000, 0.000000)
movc r0.xyz, r2.xxxx, r1.xyzx, r0.xyzx
log r1.xyz, r0.xyzx
mul r1.xyz, r1.xyzx, cb0[2].xxxx
mul r2.xzw, r1.xxyz, l(0.416667, 0.000000, 0.416667, 0.416667)
exp r1.xyz, r1.xyzx
exp r2.xzw, r2.xxzw
mad r2.xzw, r2.xxzw, l(1.055000, 0.000000, 1.055000, 1.055000), l(-0.055000, 0.000000, -0.055000, -0.055000)
mul r3.xyz, r1.xyzx, l(12.920000, 12.920000, 12.920000, 0.000000)
ge r1.xyz, r1.xyzx, l(0.003131, 0.003131, 0.003131, 0.000000)
movc r1.xyz, r1.xyzx, r2.xzwx, r3.xyzx
movc o0.xyz, r2.yyyy, r1.xyzx, r0.xyzx
mul r0.x, r0.w, l(0.450000)
ne r0.y, cb0[5].x, l(0.000000)
movc o0.w, r0.y, r0.x, r0.w
ret 
// Approximately 123 instruction slots used
